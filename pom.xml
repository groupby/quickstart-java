<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <!-- Your own application should inherit from spring-boot-starter-parent -->
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.3.5.RELEASE</version>
  </parent>
  <groupId>com.groupbyinc</groupId>
  <artifactId>quickstart-java</artifactId>
  <version>1.0.1</version>
  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <groupbyinc.api.version>2.2.94</groupbyinc.api.version>
    <groupbyinc.docker.base.version>1.8</groupbyinc.docker.base.version>
    <groupbyinc.docker.repo>docker.groupbyinc.com</groupbyinc.docker.repo>
    <groupbyinc.docker.image.name>docker.groupbyinc.com/${project.artifactId}</groupbyinc.docker.image.name>
    <groupbyinc.docker.maintainer>"GroupBy Engineering" &lt;eng@groupbyinc.com&gt;</groupbyinc.docker.maintainer>
    <groupbyinc.docker.java.image>${groupbyinc.docker.repo}/java:${groupbyinc.docker.base.version}
    </groupbyinc.docker.java.image>
    <dollar>$</dollar>
    <environmentSetting>${dollar}{springEnvironment}</environmentSetting>
  </properties>


  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>api-java-flux</artifactId>
      <version>${groupbyinc.api.version}</version>
      <classifier>uber</classifier>
    </dependency>
    <dependency>
      <groupId>com.groupbyinc</groupId>
      <artifactId>common-blip-client</artifactId>
      <version>63</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- monitoring -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
      <version>1.0.0.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-sleuth-zipkin</artifactId>
      <version>1.0.0.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.14.1</version>
        <configuration>
          <verbose>true</verbose>
          <autoPull>always</autoPull>
          <useColor>true</useColor>
          <images>
            <image>
              <name>${groupbyinc.docker.image.name}:${project.version}</name>
              <alias>${project.artifactId}</alias>
              <build>
                <maintainer>${groupbyinc.docker.maintainer}</maintainer>
                <from>${groupbyinc.docker.java.image}</from>
                <assembly>
                  <basedir>/</basedir>
                  <inline>
                    <id>exec-war</id>
                    <fileSets>
                      <fileSet>
                        <directory>${project.build.directory}</directory>
                        <includes>
                          <include>${project.build.finalName}.war</include>
                        </includes>
                        <outputDirectory>.</outputDirectory>
                      </fileSet>
                    </fileSets>
                  </inline>
                </assembly>
                <ports>
                  <port>8080</port>
                </ports>

                <volumes>
                  <volume>/tmp</volume>
                </volumes>
                <cmd>
                  <exec>
                    <arg>java</arg>
                    <arg>-Xmx196m</arg>
                    <arg>-Xms196m</arg>
                    <arg>-Djava.security.egd=file:/dev/./urandom</arg>
                    <arg>-jar</arg>
                    <arg>/${project.build.finalName}.war</arg>
                  </exec>
                </cmd>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-docker-image</id>
            <goals>
              <goal>build</goal>
            </goals>
            <phase>package</phase>
          </execution>
          <execution>
            <id>push-docker-image</id>
            <goals>
              <goal>push</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase></phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
